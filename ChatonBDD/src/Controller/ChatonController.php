<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use App\Entity\Chaton;
use App\Form\ChatonType;
use App\Entity\Categorie;

class ChatonController extends AbstractController
{
    /**
     * @Route("/chaton/{id_categorie}", name="chaton")
     */
    public function index($id_categorie)
    {
        $repository = $this->getDoctrine()->getRepository(Categorie::class);

        $categorie = $repository->find($id_categorie);
        $chatons = $categorie->getChatons();

        return $this->render('chaton/index.html.twig', [
            "categorie"=>$categorie,
            "chatons"=>$chatons,
        ]);
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route("/chaton/ajouter/{id_categorie}", name="chaton_ajouter")
     */
    public function ajouter(Request $request, $id_categorie){

        $repository = $this->getDoctrine()->getRepository(Categorie::class);
        $categorie = $repository->find($id_categorie);

        $chaton = new Chaton();
        $chaton->setCategorie($categorie);

        $form = $this->createForm(ChatonType::class, $chaton);
        $form->handleRequest($request);

        if ($form->isSubmitted() && $form->isValid()) {
            
            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            $file = $form->get('photo')->getData();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();


            // Move the file to the directory where brochures are stored

            $file->move(
                '../public/photo/',
                $fileName
            );

            $chaton->setPhoto($fileName);

            $em = $this->getDoctrine()->getManager();
            $em->persist($chaton);
            $em->flush();

            return $this->redirectToRoute("chaton",["id_categorie"=>$id_categorie]);
        }

        return $this->render('categorie/ajouter.html.twig', [
            "Titre"=>"Ajouter un Chaton !",
            "form"=>$form->createView()
        ]);
        

        
    }
    
    /**
     * @Route("/chaton/modifier/{id_chaton}", name="chaton_modifier")
     */
    
    public function modifier($id_chaton, Request $request)
    {
        //récupérer le repository (une connexion à la table en gros...)
        $repository= $this->getDoctrine()->getRepository(Chaton::class);
        $chaton = $repository->find($id_chaton);
        $photo = $chaton->getPhoto();


        $form = $this->createForm(ChatonType::class, $chaton);

        $form->handleRequest($request);

        if($form->isSubmitted() && $form->isValid()){
        

            /** @var Symfony\Component\HttpFoundation\File\UploadedFile $file */
            $file = $form->get('photo')->getData();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();


            // Move the file to the directory where brochures are stored

            $file->move(
                '../public/photo/',
                $fileName
            );

            $chaton->setPhoto($fileName);

            $old_file = "photo/".$photo;

            if( file_exists ( $old_file)){
                unlink( $old_file ) ;
            }

            //une connexion à la BDD par l'entity manager
            $em = $this->getDoctrine()->getManager();
            $em->persist($chaton);
            $em->flush();

            return $this->redirectToRoute("chaton",["id_categorie"=>$chaton->getCategorie()->getId()]);
        }

        return $this->render('categorie/ajouter.html.twig', [
            "form"=>$form->createView(),
            "Titre"=>"Modifier un chaton"        
        ]);
    }

    /**
     * @Route("/chaton/verif/{id_chaton}", name="chaton_verif")
     */

    public function verif($id_chaton, Request $request)
    {
        //récupérer le repository (une connexion à la table en gros...)
        $repository= $this->getDoctrine()->getRepository(Chaton::class);
        $chaton = $repository->find($id_chaton);

        return $this->render('chaton/verification.html.twig', [
            "chaton"=>$chaton,
            "Titre"=>"Supprimer le chaton"        
        ]);
    }

    /**
     * @Route("/chaton/supprimer/{id_chaton}", name="chaton_supprimer")
     */
    
    public function supprimer($id_chaton, Request $request)
    {
        //récupérer le repository (une connexion à la table en gros...)
        $repository= $this->getDoctrine()->getRepository(Chaton::class);
        $chaton = $repository->find($id_chaton);
        $id_categorie = $chaton->getCategorie()->getId();

        //une connexion à la BDD par l'entity manager
        $em = $this->getDoctrine()->getManager();
        $em->remove($chaton);
        $em->flush();
        
        return $this->redirectToRoute("chaton",["id_categorie"=>$id_categorie]);

    }

    /**
     * @Route("/chaton/proprietaires/{id_chaton}", name="chaton_proprietaires")
     */
    public function proprietaires($id_chaton)
    {
        $repository = $this->getDoctrine()->getRepository(Chaton::class);

        $chaton = $repository->find($id_chaton);

        return $this->render('chaton/proprietaires.html.twig', [
            "chaton"=>$chaton,
        ]);
    }
}
